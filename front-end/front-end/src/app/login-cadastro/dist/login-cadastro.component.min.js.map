{"version":3,"sources":["login-cadastro.component.ts"],"names":["Usuario_1","require","core_1","UserLogin_1","environment_prod_1","LoginCadastroComponent","consumoService","router","this","usuario","Usuario","userLogin","UserLogin","nome","window","document","getElementById","prototype","ngOnInit","scroll","login","_this","subscribe","resp","environment","token","id","email","console","log","alert","navigate","erro","status","cadastrar","senha","confirmarSenha","confirmSenha","event","target","value","LiberaDados","Dadosliberados","confirmEmail","__decorate","ViewChild","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,UAAAC,QAAA,uBACAC,OAAAD,QAAA,iBAIAE,YAAAF,QAAA,uBACAG,mBAAAH,QAAA,qCAUAI,uBAAA,WAWE,SAAAA,EACUC,EACAC,GADAC,KAAAF,eAAAA,EACAE,KAAAD,OAAAA,EAXVC,KAAAC,QAAmB,IAAIT,UAAAU,QAGvBF,KAAAG,UAAuB,IAAIR,YAAAS,UAE3BJ,KAAAK,KAAOC,OAAOC,SAASC,eAAe,QA8EtC,OArEAX,EAAAY,UAAAC,SAAA,WACEJ,OAAOK,OAAO,EAAG,IAEnBd,EAAAY,UAAAG,MAAA,WAAA,IAAAC,EAAAb,KACEA,KAAKF,eAAec,MAAMZ,KAAKG,WAAWW,UAAU,SAACC,GACnDF,EAAKV,UAAYY,EACjBnB,mBAAAoB,YAAYC,MAAQJ,EAAKV,UAAUc,MACnCrB,mBAAAoB,YAAYX,KAAOQ,EAAKV,UAAUE,KAClCT,mBAAAoB,YAAYE,GAAKL,EAAKV,UAAUe,GAChCtB,mBAAAoB,YAAYG,MAAQN,EAAKV,UAAUgB,MAEnCC,QAAQC,IAAIzB,mBAAAoB,YAAYC,OAExBG,QAAQC,IAAIzB,mBAAAoB,YAAYX,MAExBe,QAAQC,IAAIzB,mBAAAoB,YAAYE,IAExBE,QAAQC,IAAIzB,mBAAAoB,YAAYG,OAIC,MAArBvB,mBAAAoB,YAAYC,MAEdK,MAAM,oBAGNT,EAAKd,OAAOwB,SAAS,CAAC,cAGvB,SAAAC,GACkB,KAAfA,EAAKC,QACPH,MAAM,uCAMZzB,EAAAY,UAAAiB,UAAA,WAAA,IAAAb,EAAAb,KACEA,KAAKC,QAAUD,KAAKC,QAChBD,KAAKC,QAAQ0B,OAAS3B,KAAK4B,eAC7BN,MAAM,+BAGNtB,KAAKF,eAAe4B,UAAU1B,KAAKC,SAASa,UAAU,SAACC,GACrDF,EAAKZ,QAAUc,EACfF,EAAKd,OAAOwB,SAAS,CAAC,YACtBD,MAAM,8CAOZzB,EAAAY,UAAAoB,aAAA,SAAaC,GACX9B,KAAK4B,eAAiBE,EAAMC,OAAOC,OAGrCnC,EAAAY,UAAAwB,YAAA,SAAYH,GACV9B,KAAKkC,eAAiBJ,EAAMC,OAAOC,OAGrCnC,EAAAY,UAAA0B,aAAA,SAAaL,GACX9B,KAAKmC,aAAaL,EAAMC,OAAOC,OArENI,WAAA,CAA1B1C,OAAA2C,UAAU,wCATAxC,EAAsBuC,WAAA,CALlC1C,OAAA4C,UAAU,CACTC,SAAU,qBACVC,YAAa,kCACbC,UAAW,CAAC,qCAED5C,GAAb,GAAa6C,QAAA7C,uBAAAA","file":"login-cadastro.component.min.js","sourcesContent":["import { Usuario } from './../models/Usuario';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { ConsumoService } from '../service/usuario.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserLogin } from '../models/UserLogin';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { invalid } from '@angular/compiler/src/render3/view/util';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-cadastro',\r\n  templateUrl: './login-cadastro.component.html',\r\n  styleUrls: ['./login-cadastro.component.css']\r\n})\r\nexport class LoginCadastroComponent implements OnInit {\r\n\r\n  usuario: Usuario = new Usuario\r\n  confirmarSenha: string\r\n  Dadosliberados: string\r\n  userLogin: UserLogin = new UserLogin()\r\n\r\n  nome = window.document.getElementById('nome')\r\n\r\n  @ViewChild(\"invalid-user\") element: ElementRef\r\n\r\n  constructor(\r\n    private consumoService: ConsumoService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    window.scroll(0, 0)\r\n  }\r\n  login() {\r\n    this.consumoService.login(this.userLogin).subscribe((resp: UserLogin) => {\r\n      this.userLogin = resp\r\n      environment.token = this.userLogin.token\r\n      environment.nome = this.userLogin.nome\r\n      environment.id = this.userLogin.id\r\n      environment.email = this.userLogin.email\r\n\r\n      console.log(environment.token)\r\n\r\n      console.log(environment.nome)\r\n\r\n      console.log(environment.id)\r\n\r\n      console.log(environment.email)\r\n\r\n\r\n\r\n      if (environment.token == null) {\r\n\r\n        alert('Usuario inválido')\r\n\r\n      } else {\r\n        this.router.navigate(['/profile'])\r\n      }\r\n\r\n    }, erro => {\r\n      if (erro.status == 500) {\r\n        alert('E-mail ou senha estão incorretos')\r\n      }\r\n    }\r\n    )\r\n  }\r\n\r\n  cadastrar() {\r\n    this.usuario = this.usuario\r\n    if (this.usuario.senha != this.confirmarSenha) {\r\n      alert('A senhas estão divergentes.')\r\n    }\r\n    else {\r\n      this.consumoService.cadastrar(this.usuario).subscribe((resp: Usuario) => {\r\n        this.usuario = resp\r\n        this.router.navigate(['/inicio'])\r\n        alert('Seu cadastro foi efetudado com sucesso!')\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  confirmSenha(event: any) {\r\n    this.confirmarSenha = event.target.value\r\n  }\r\n\r\n  LiberaDados(event: any) {\r\n    this.Dadosliberados = event.target.value\r\n  }\r\n\r\n  confirmEmail(event: any){\r\n    this.confirmEmail=event.target.value\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}