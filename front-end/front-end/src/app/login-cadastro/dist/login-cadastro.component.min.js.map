{"version":3,"sources":["login-cadastro.component.ts"],"names":["Usuario_1","require","core_1","UserLogin_1","LoginCadastroComponent","consumoService","router","this","usuario","Usuario","userLogin","UserLogin","prototype","ngOnInit","window","scroll","login","_this","subscribe","resp","navigate","erro","status","alert","cadastrar","senha","confirmarSenha","confirmSenha","event","target","value","LiberaDados","Dadosliberados","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,UAAAC,QAAA,uBACAC,OAAAD,QAAA,iBAIAE,YAAAF,QAAA,uBASAG,uBAAA,WAQE,SAAAA,EACUC,EACAC,GADAC,KAAAF,eAAAA,EACAE,KAAAD,OAAAA,EARVC,KAAAC,QAAmB,IAAIR,UAAAS,QAGvBF,KAAAG,UAAwB,IAAIP,YAAAQ,UAqD9B,OA3CEP,EAAAQ,UAAAC,SAAA,WACEC,OAAOC,OAAO,EAAG,IAEnBX,EAAAQ,UAAAI,MAAA,WAAA,IAAAC,EAAAV,KACEA,KAAKF,eAAeW,MAAMT,KAAKG,WAAWQ,UAAU,SAACC,GACnDF,EAAKP,UAAWS,EAChBF,EAAKX,OAAOc,SAAS,CAAC,aAEtB,SAAAC,GACiB,KAAdA,EAAKC,QACNC,MAAM,wCAMZnB,EAAAQ,UAAAY,UAAA,WAAA,IAAAP,EAAAV,KACEA,KAAKC,QAAUD,KAAKC,QAChBD,KAAKC,QAAQiB,OAASlB,KAAKmB,eAC7BH,MAAM,+BAGNhB,KAAKF,eAAemB,UAAUjB,KAAKC,SAASU,UAAU,SAACC,GACrDF,EAAKT,QAAUW,EACfF,EAAKX,OAAOc,SAAS,CAAC,YACtBG,MAAM,8CAOZnB,EAAAQ,UAAAe,aAAA,SAAaC,GACXrB,KAAKmB,eAAiBE,EAAMC,OAAOC,OAGrC1B,EAAAQ,UAAAmB,YAAA,SAAYH,GACVrB,KAAKyB,eAAiBJ,EAAMC,OAAOC,OApD1B1B,EAAsB6B,WAAA,CALlC/B,OAAAgC,UAAU,CACTC,SAAU,qBACVC,YAAa,kCACbC,UAAW,CAAC,qCAEDjC,GAAb,GAAakC,QAAAlC,uBAAAA","file":"login-cadastro.component.min.js","sourcesContent":["import { Usuario } from './../models/Usuario';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { ConsumoService } from './../service/consumo.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserLogin } from '../models/UserLogin';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-cadastro',\r\n  templateUrl: './login-cadastro.component.html',\r\n  styleUrls: ['./login-cadastro.component.css']\r\n})\r\nexport class LoginCadastroComponent implements OnInit {\r\n\r\n  usuario: Usuario = new Usuario\r\n  confirmarSenha: string\r\n  Dadosliberados: string\r\n  userLogin : UserLogin = new UserLogin()\r\n\r\n\r\n  constructor(\r\n    private consumoService: ConsumoService,\r\n    private router: Router\r\n\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    window.scroll(0, 0)\r\n  }\r\n  login(){\r\n    this.consumoService.login(this.userLogin).subscribe((resp : UserLogin)=>{\r\n      this.userLogin= resp\r\n      this.router.navigate(['/inicio'])\r\n\r\n    },erro =>{\r\n      if(erro.status ==500){\r\n        alert('Usuario ou senha estão incorretos')\r\n      }\r\n    }\r\n    )\r\n    }\r\n\r\n  cadastrar() {\r\n    this.usuario = this.usuario\r\n    if (this.usuario.senha != this.confirmarSenha) {\r\n      alert('A senhas estão divergentes.')\r\n    }\r\n    else {\r\n      this.consumoService.cadastrar(this.usuario).subscribe((resp: Usuario) => {\r\n        this.usuario = resp\r\n        this.router.navigate(['/inicio'])\r\n        alert('Seu cadastro foi efetudado com sucesso!')\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  confirmSenha(event: any) {\r\n    this.confirmarSenha = event.target.value\r\n  }\r\n\r\n  LiberaDados(event: any) {\r\n    this.Dadosliberados = event.target.value\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]}